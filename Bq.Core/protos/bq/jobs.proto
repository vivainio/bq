syntax = "proto3";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

package bq.jobs;

// envelope passed to message handlers
message Envelope {
    google.protobuf.Any msg = 1;
    string id = 2;
    string correlation_id = 3;
    string cursor = 4;
}


// you will only get "READY" jobs when reading
enum JobStatus {
    // not used, required by protobuf
    UNKNOWN = 0;
    // task that can be started by anyone
    READY = 1;
    // task that has been started and someone is working on it
    PENDING = 2;
    // task that has failed
    FAILED = 3;
    
}
// representation of job in database
message DbJob {
    string id = 1;
    
    // This can be parsed to Envelope
    bytes envelope = 2;
    google.protobuf.StringValue cursor = 4; // this will populate Envelope.cursor & is authority
    google.protobuf.Timestamp launch_at = 5;
    google.protobuf.Timestamp expires_at = 6;
    // descibes "channel" where message is. different workers can be picky about what channels they care about
    // similar to rabbit queue maybe?
    string channel = 7;
    JobStatus state = 8;
}

// use this for your first demo
message DemoMessagePing {
    string message = 1;
}

message DemoMessagePong {
    string message = 1;
}
